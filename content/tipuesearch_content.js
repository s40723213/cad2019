var tipuesearch = {"pages": [{'title': 'About', 'text': '個人倉儲: https://github.com/s40723213/cad2019 \n 個人youtube: https://www.youtube.com/channel/UC5SDOqSnuKGLgsWSdmdjDjw?view_as=subscriber \n 此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數. \n', 'tags': '', 'url': 'Develop.html'}, {'title': 'Weekly progress', 'text': 'Week 2 \n 建立新的github倉儲 \n 1.到個人網站建立新的倉儲，並且clone到近端。 \n 2.用 git config --global user設定名稱、信箱和proxy，之後再用指令git submodule add\xa0建立目錄取下子模型。 \n 3.最後再輸入python -m pip install flask cors即可。 \n 4.備註:要進入近端，必須先進入cmsimde，指令python wsgi.py方能使用。 \n Week3 \n Solvespace編譯 \n 1. Y:\\portablegit\\bin\\sh.exe 改名為 sh_rename_for_solvespace.exe。 \n 2.更新github版本到2.13以上。 \n 3. git clone --recurse-submodules https://github.com/solvespace/solvespace.git solvespace \n 4. 編輯cmakelist，在713~714行之間加入#字號。 \n 5.把ibpng.dll.a 的編譯, 並改名為 libpng_static.a, 並放到編譯系統的 lib 目錄中。 \n 6.切路徑至build，再執行cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release，輸入 mingw32-make。 \n 7.路徑切回solvespace原始碼，建立並進入Build目錄，再次執行cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release，輸入 mingw32-make。 \n Week4 \n Week5 \n Week6 \n Week7 \n Week8 \n Week9 \n', 'tags': '', 'url': 'Weekly progress.html'}]};