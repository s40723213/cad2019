var tipuesearch = {"pages": [{'title': 'Week', 'text': 'Week2-5 \n Week6-9 \n Week10-14 \n Week15-18 \n', 'tags': '', 'url': 'Week.html'}, {'title': 'Week2-5', 'text': 'Week 2 \n 建立新的github倉儲 \n 1.到個人網站建立新的倉儲，並且clone到近端(要去mde.tw下載"2019fall可攜套件")。 \n 2.用git config --global user設定名稱、信箱和proxy，之後再用指令git submodule add 建立目錄取下子模型。 \n 3.最後再輸入python -m pip install flask cors即可。 \n 4.備註:要進入近端，必須先進入cmsimde，指令python wsgi.py方能使用。 \n \n Week3 \n Solvespace編譯 \n 1.Y:\\portablegit\\bin\\sh.exe 改名為 sh_rename_for_solvespace.exe。 \n 2.更新github版本到2.13以上。 \n 3.git clone --recurse-submodules https://github.com/solvespace/solvespace.git solvespace \n 4.編輯cmakelist，在713~714行之間加入#字號。 \n 5.把ibpng.dll.a 的編譯, 並改名為 libpng_static.a, 並放到編譯系統的 lib 目錄中。 \n 6.切路徑至build，再執行cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release，輸入mingw32-make。 \n 7.路徑切回solvespace原始碼，建立並進入Build目錄，再次執行cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release，輸入mingw32-make。 \n \n Week4 \n 自行更新網站，拍攝影片及嵌字幕的軟體 \n 1.影片: Share-X \n \n 2.字幕: Aegisub \n \n 3.整合影片和字幕: Arctime \n 註:影片需有課程或自己的浮水印 \n Week5 \n solvespace圖面繪製練習 \n 到http://mde.tw/cad2019/content/Solvespace%20%E6%93%8D%E4%BD%9C.html \n 選擇一個去畫，切記要與小組組員畫不同的。 \n \n 快捷鍵 \n (D)標註尺寸 \n (Q)相同 \n (H)水平共線 \n (V)垂直共線 \n (Shift+X)延伸 \n (M)線中心點 \n', 'tags': '', 'url': 'Week2-5.html'}, {'title': 'Week6-9', 'text': 'Week6 \n 1.參數化零組件繪製 \n 利用slovespace繪製一台兩輪車 \n 操作影片 \n \n 2.網際 V-rep 模型控制 \n 1.下載V-rep和web_vrep2 \n 2.打開V-rep，打開兩輪車 \n 3.到web_vrep2的資料夾打開app.py ->tool->go \n 4.到https://127.0.0.1:5000即可操控 \n \n 3.新增啟動與停止按鈕 \n 1.開啟controls.html \n 2.插入兩行 \n 開始指令<td><a class="pure-button pure-button-primary" href="/do/start">start</a> \n 停止指令</td><a class="pure-button pure-button-primary" href="/do/stop">stop</a></td> \n 3.開啟controls.html確定有兩個按鈕後，開啟vrep_linefollower.py \n 4.到中間加入 \n if direction == \'start\': \n vrep.simxStartSimulation(self.clientID, vrep.simx_opmode_oneshot) \n elif direction == \'stop\': \n else : \n 5.開啟測試 \n 影片操作 \n \n Week7 \n 1.solvespace加入學號 \n 2.solvespace繪圖驗證 \n \n Week8 \n 1.導入Webots \n 1.下載Webots_2019b_rev1.7z \n 2.複製start_mdecourse.bat並更名start_mdecourse -webot.bat \n 3.貼上指令path_webots=%Disk%:\\Webots_2019b_rev1\\msys64\\mingw64\\bin;%Disk%:\\Webots_2019b_rev1\\msys64\\usr\\bin \n 4.按stop,開啟start_mdecourse -webot.bat \n \n 2.開啟網誌 \n 1.開啟leo \n 2.將config中的pelican.leo丟入leo edit裡面 \n 3.SITENAME改為 學號 cad2019 \n \n Week9 \n 期中影片 \n \n', 'tags': '', 'url': 'Week6-9.html'}, {'title': 'Week10-14', 'text': '', 'tags': '', 'url': 'Week10-14.html'}, {'title': 'Week15-18', 'text': '', 'tags': '', 'url': 'Week15-18.html'}, {'title': 'NOTE', 'text': '', 'tags': '', 'url': 'NOTE.html'}, {'title': 'About', 'text': '個人倉儲:https://github.com/s40723213/cad2019 \n 個人youtube:https://www.youtube.com/channel/UC5SDOqSnuKGLgsWSdmdjDjw?view_as=subscriber \n 此內容管理系統以 https://github.com/mdecourse/cmsimde 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考 https://github.com/mdecourse/newcms, 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add https://github.com/mdecourse/cmsimde cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules https://github.com/mdecourse/newcms.git \n Develop https://github.com/mdecourse/cmsimde 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.', 'tags': '', 'url': 'About.html'}]};